rotate
時間: O(n^2)
空間: O(1) inplace

思路
先轉最外圈的，再逐一網內轉，詳細範例看think.txt，順時針轉，所以方向會是「上->右，右->下，下->左，左->上」，由於要做inplace，所以我們把「上」當成暫存，會變成：「上<->右，上(此時值為右)<->下，上(此時值為下)<->左」
比較麻煩的是加入內圈後的r，要思考很清楚各種+1 -1，幾個重點：
1. 尾部是n-1，不是n
2. 假設「上」為原點(r,i)，則觀察交換的順序，如果是反向，那被交換方的index就會是遞減，順向的話就會是遞增
3. 觀察哪些index是每一步都會動到，這種就會動到i
4. 觀察哪些index是進到內圈後才會變動，這時候才會動到r
5. 有時候看簡單的範例會以為某個交換一定會在同一行/列，但觀察General Case的話則不一定成立，所以思考不要被簡單範例所侷限

最後有觀察到：被交換方「右、下、左」的x, y軸有某種對稱關係，可以當作思考的提示之一：
右：[i][n - 1 - r]：
    - 每一步交換會漸漸往下走(index遞增)，所以「列」是i遞增
    - 每一步交換「行」不動，只有進內圈時才動，且遞減，所以「行」是n - 1 - r遞減

下：[n - 1 - r][n - 1 - i]
    - 每一步交換，「列」不動，「行」反向(index遞減)
    - 進內圈，「列」遞減(由下往上)，「行」不動

左：[n - 1 - i][r]：
    - 每一步交換會漸漸往上走(index遞減)，所以「列」是n-1-i遞減
    - 每一步交換「行」不動，只有進內圈時才動，且遞增，所以「行」是r遞增

遞增的，不是i就是r
遞減的，都是n-1-i, n-1-r