getSum:

時間: O(logn)
空間: O(1)

carry = a & b 可以算出a, b都為1的bit，代表這一位要進位
a = a ^ b 即為不考慮進位的 a + b
b = carry << 1 「不考慮進位」已經算完，接下來只要算進位的部分，進位指的是「更大的那一位」要加一，所以left shift

問題：遇到負值時，最左邊會是1，以這個邏輯去算會變成進位，然後失去負值